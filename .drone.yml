kind: pipeline
type: docker
name: acovado

environment:
  REGISTRY_URL: docker-registry.acovado.club
  MODULES_IMAGE: docker-registry.acovado.club/modules
  BEBE_IMAGE: docker-registry.acovado.club/bebe
  COLLECTION_IMAGE: docker-registry.acovado.club/collection
  ANA_LIESE_IMAGE: docker-registry.acovado.club/ana-liese

volumes:
  - name: docker-socket
    host:
      path: /var/run/docker.sock
  - name: docker-cache
    host:
      path: /var/lib/docker
  - name: volumes-root
    host:
      path: /srv/volumes
  - name: env-files-root
    host:
      path: /srv/env

steps:
  ##############################################################################
  # Step 1: Build and push shared modules
  ##############################################################################
  - name: build-modules
    image: docker:20
    environment:
      DOCKER_BUILDKIT: 1
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: docker-cache
        path: /var/lib/docker
    commands:
      - docker build --cache-from=$${MODULES_IMAGE}:latest --target modules -t $${MODULES_IMAGE}:${DRONE_COMMIT_SHA} .
      - docker tag $${MODULES_IMAGE}:${DRONE_COMMIT_SHA} $${MODULES_IMAGE}:latest
      - docker push $${MODULES_IMAGE}:${DRONE_COMMIT_SHA}
      - docker push $${MODULES_IMAGE}:latest

  ##############################################################################
  # Step 2: Build and push bebe
  ##############################################################################
  - name: build-bebe
    image: docker:20
    environment:
      DOCKER_BUILDKIT: 1
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: docker-cache
        path: /var/lib/docker
    commands:
      - docker build --cache-from=$${MODULES_IMAGE}:latest --cache-from=$${BEBE_IMAGE}:latest --target production --build-arg APP_PATH=bebe -t $${BEBE_IMAGE}:${DRONE_COMMIT_SHA} .
      - docker tag $${BEBE_IMAGE}:${DRONE_COMMIT_SHA} $${BEBE_IMAGE}:latest
      - docker push $${BEBE_IMAGE}:${DRONE_COMMIT_SHA}
      - docker push $${BEBE_IMAGE}:latest
    depends_on:
      - build-modules

  ##############################################################################
  # Step 3: Build and push collection
  ##############################################################################
  - name: build-collection
    image: docker:20
    environment:
      DOCKER_BUILDKIT: 1
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: docker-cache
        path: /var/lib/docker
    commands:
      - docker build --cache-from=$${MODULES_IMAGE}:latest --cache-from=$${COLLECTION_IMAGE}:latest --target production --build-arg APP_PATH=collection -t $${COLLECTION_IMAGE}:${DRONE_COMMIT_SHA} .
      - docker tag $${COLLECTION_IMAGE}:${DRONE_COMMIT_SHA} $${COLLECTION_IMAGE}:latest
      - docker push $${COLLECTION_IMAGE}:${DRONE_COMMIT_SHA}
      - docker push $${COLLECTION_IMAGE}:latest
    depends_on:
      - build-modules

  ##############################################################################
  # Step 4: Build and push ana-liese
  ##############################################################################
  - name: build-ana-liese
    image: docker:20
    environment:
      DOCKER_BUILDKIT: 1
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: docker-cache
        path: /var/lib/docker
    commands:
      - docker build --cache-from=$${MODULES_IMAGE}:latest --cache-from=$${ANA_LIESE_IMAGE}:latest --target production --build-arg APP_PATH=ana-liese -t $${ANA_LIESE_IMAGE}:${DRONE_COMMIT_SHA} .
      - docker tag $${ANA_LIESE_IMAGE}:${DRONE_COMMIT_SHA} $${ANA_LIESE_IMAGE}:latest
      - docker push $${ANA_LIESE_IMAGE}:${DRONE_COMMIT_SHA}
      - docker push $${ANA_LIESE_IMAGE}:latest
    depends_on:
      - build-modules

  ##############################################################################
  # Step 5: Deploy ðŸ¤™
  ##############################################################################
  - name: deploy
    image: docker:20
    environment:
      COMMIT_HASH: ${DRONE_COMMIT_SHA} # Pass the commit hash
      REGISTRY_URL: ${REGISTRY_URL}
      PROJECT_ROOT: /drone/src
      VOLUMES_ROOT: /srv/volumes
      CONFIG_FILES_ROOT: /srv/volumes/deployment/config
      ENV_FILES_ROOT: /srv/env
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: env-files-root
        path: /srv/env
      - name: volumes-root
        path: /srv/volumes
    commands:
      # Update current deployment folder
      - cp /drone/src/docker-compose.prod.yaml /srv/volumes/deployment/docker-compose.prod.yaml
      - cp /drone/src/infra/tracing/otel-collector-config.yaml /srv/volumes/deployment/config/otel-collector-config.yaml
      - cp /drone/src/infra/tracing/tempo.yaml /srv/volumes/deployment/config/tempo.yaml
      - cp /drone/src/infra/tracing/prometheus.yaml /srv/volumes/deployment/config/prometheus.yaml
      - cp /drone/src/infra/tracing/prometheus.yaml /srv/volumes/deployment/config/prometheus.yaml

      # Deploy the new environment
      - docker-compose -f docker-compose.prod.yaml --profile infra up --detach
      - docker-compose -f docker-compose.prod.yaml --profile apps up --detach --force-recreate
    depends_on:
      - build-bebe
      - build-collection
      - build-ana-liese

trigger:
  branch:
    - ci/setup
