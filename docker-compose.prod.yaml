services:
  ##############################################################################
  # Apps
  ##############################################################################
  bebe:
    container_name: bebe
    image: ${REGISTRY_URL}/bebe:${COMMIT_HASH}
    env_file:
      - ${ENV_FILES_ROOT}/bebe.env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://production:production@production:5432/development
      BROKER_URL: amqp://rabbit:rabbit@localhost:5672
      TRACE_EXPORTER_URL: http://localhost:4318/v1/traces
    networks:
      - proxy-network
    profiles:
      - apps

  collection:
    container_name: collection
    image: ${REGISTRY_URL}/collection:${COMMIT_HASH}
    env_file:
      - ${ENV_FILES_ROOT}/collection.env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://production:production@production:5432/development
      BROKER_URL: amqp://rabbit:rabbit@localhost:5672
      TRACE_EXPORTER_URL: http://localhost:4318/v1/traces
    networks:
      - proxy-network
    profiles:
      - apps

  ana-liese:
    container_name: ana-liese
    image: ${REGISTRY_URL}/ana-liese:${COMMIT_HASH}
    env_file:
      - ${ENV_FILES_ROOT}/ana-liese.env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://production:production@production:5432/development
      BROKER_URL: amqp://rabbit:rabbit@localhost:5672
      TRACE_EXPORTER_URL: http://localhost:4318/v1/traces
    networks:
      - proxy-network
    profiles:
      - apps

  ##############################################################################
  # Infra
  ##############################################################################
  postgres:
    extends:
      file: infra/postgres/docker-compose.yaml
      service: postgres
    env_file:
      - ${ENV_FILES_ROOT}/postgres.env
    environment:
      POSTGRES_USER: production
      POSTGRES_PASSWORD: production
      POSTGRES_DB: production
    networks:
      - proxy-network
    profiles:
      - infra

  # TODO Drizzle studio maybe?

  rabbitmq:
    extends:
      file: infra/rabbitmq/docker-compose.yaml
      service: rabbitmq
    env_file:
      - ${ENV_FILES_ROOT}/rabbitmq.env
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    networks:
      - proxy-network
    profiles:
      - infra

  grafana:
    extends:
      file: infra/tracing/docker-compose.yaml
      service: grafana
    env_file:
      - ${ENV_FILES_ROOT}/grafana.env
    volumes:
      - ${CONFIG_FILES_ROOT}/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports: []
    networks:
      - proxy-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.acovado.club`)'
      - 'traefik.http.routers.grafana.entrypoints=websecure'
      - 'traefik.http.routers.grafana.tls.certresolver=acovado'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    depends_on:
      - jaeger
      - tempo
      - otel-collector

  otel-collector:
    extends:
      file: infra/tracing/docker-compose.yaml
      service: otel-collector
    env_file:
      - ${ENV_FILES_ROOT}/otel-collector.env
    volumes:
      - ${CONFIG_FILES_ROOT}/otel-collector.yaml:/etc/otel-collector-config.yaml
    ports: []
    networks:
      - proxy-network
    depends_on:
      - tempo

  jaeger:
    extends:
      file: infra/tracing/docker-compose.yaml
      service: otel-collector
    env_file:
      - ${ENV_FILES_ROOT}/jaeger.env
    ports: []
    networks:
      - proxy-network
    depends_on:
      - tempo
      - otel-collector

  prometheus:
    extends:
      file: infra/tracing/docker-compose.yaml
      service: prometheus
    env_file:
      - ${ENV_FILES_ROOT}/prometheus.env
    volumes:
      - ${CONFIG_FILES_ROOT}/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports: []
    networks:
      - proxy-network

  tempo:
    extends:
      file: infra/tracing/docker-compose.yaml
      service: tempo
    env_file:
      - ${ENV_FILES_ROOT}/tempo.env
    ports: []
    command: [-config.file=/etc/tempo.yaml]
    volumes:
      - ${CONFIG_FILES_ROOT}/tempo.yaml:/etc/tempo.yaml
      - ${VOLUMES_ROOT}/tempo-data:/tmp/tempo
    networks:
      - proxy-network

networks:
  proxy-network:
    external: true
